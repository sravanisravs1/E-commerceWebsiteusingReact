{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Ecommerce\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, Fragment } from \"react\";\nimport About from './pages/About';\nimport Home from \"./pages/Home\";\nimport { Button } from \"react-bootstrap\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport MovieList from './components/Movies/MovieList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/about',\n  element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 26\n  }, this)\n}, {\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 21\n  }, this)\n}\n// {path:'/store',element:<Store/>}\n]);\n\nconst App = props => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [retry, setRetry] = useState(true);\n  const Cancel = () => {\n    setRetry(false);\n  };\n  //   function MoviesList () {\n  //     fetch('https://swapi.dev/api/films/')\n  //     .then((response)=>{ return response.json();\n  // })\n  //     .then(data=>console.log(data.results))\n\n  // }\n  const timeout = () => {\n    setTimeout(MovieList(), 250);\n  };\n  const clearTimeout = () => {\n    clearTimeout(timeout);\n  };\n  async function MoviesList() {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://swapi.dev/api/film/');\n      if (!response.ok) {\n        throw new Error('something went wrong,Retrying...');\n      }\n\n      // if (!response.ok && !retry){\n      //   clearTimeout(retryTimeout)\n      //   throw new Error('something went wrong..')\n      // }\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          releaseDate: movieData.release_date,\n          openingText: movieData.opening_crawl\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n      timeout();\n    }\n    setIsLoading(false);\n  }\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no Movies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: MoviesList,\n        children: \"FetchMovies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: clearTimeout,\n        children: \"Cancel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"2DM7pooYKNBrW2bvkWdmAoukCSA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useContext","Fragment","About","Home","Button","createBrowserRouter","RouterProvider","MovieList","router","path","element","App","props","movies","setMovies","isLoading","setIsLoading","error","setError","retry","setRetry","Cancel","timeout","setTimeout","clearTimeout","MoviesList","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","message","content","length"],"sources":["C:/Users/Admin/Desktop/Ecommerce/src/App.js"],"sourcesContent":["import React, { useState ,useContext, Fragment} from \"react\";\nimport About from './pages/About';\nimport Home from \"./pages/Home\";\nimport { Button } from \"react-bootstrap\";\nimport { createBrowserRouter ,RouterProvider} from \"react-router-dom\";\nimport MovieList from './components/Movies/MovieList'\n\nconst router = createBrowserRouter([\n  \n  {path:'/about',element:<About/>},\n  {path:'/',element:<Home/>},\n  // {path:'/store',element:<Store/>}\n  \n]);\n\nconst  App = (props) => {\n  const [movies,setMovies ] = useState([]);\n  const [isLoading , setIsLoading ] = useState(false);\n  const [error,setError] = useState(null);\n  const [retry,setRetry] = useState(true)\n  const Cancel = () =>{\n    setRetry(false)\n  }\n//   function MoviesList () {\n//     fetch('https://swapi.dev/api/films/')\n//     .then((response)=>{ return response.json();\n// })\n//     .then(data=>console.log(data.results))\n    \n// }\n  const timeout =()=>{\n    setTimeout(MovieList(), 250)\n  } \n  const clearTimeout = () => {\n\n  clearTimeout(timeout);\n  }\n  async function MoviesList () {\n      setIsLoading(true);\n      setError(null);\n      \n      try{\n          const response= await fetch('https://swapi.dev/api/film/');\n          if (!response.ok ){\n           throw new Error('something went wrong,Retrying...');\n            }\n          \n          \n          // if (!response.ok && !retry){\n          //   clearTimeout(retryTimeout)\n          //   throw new Error('something went wrong..')\n          // }\n          const data = await response.json();\n          const transformedMovies = data.results.map((movieData=>{\n            return ({\n              id:movieData.episode_id,\n              title:movieData.title,\n              releaseDate:movieData.release_date,\n              openingText:movieData.opening_crawl\n            });\n\n          }));\n          \n        setMovies(transformedMovies);\n        \n\n      } catch(error) {\n            setError(error.message);\n            timeout();\n          \n      }   \n      setIsLoading(false) ;  \n  }\n  \n  \n  \n  let content = <p>Found no Movies</p>\n  if(movies.length > 0) {\n    content = <MovieList movies={movies}/>\n  }\n  if (error){\n    content = <p>{error}</p>\n  }\n  if(isLoading) {\n    content = <p>Loading...</p>\n  }\n  return(\n  <Fragment>\n      <RouterProvider router={router}/>\n      <section>\n          <Button variant='success' onClick={MoviesList}>\n            FetchMovies\n          </Button>\n          <Button variant='danger' onClick={clearTimeout}>Cancel </Button>\n          \n      </section>\n      <section>\n        {/* {!isLoading && movies.length > 0 && <MovieList movies={movies}/>}\n        {!error && isLoading && <p>loading....</p>}\n        {!error && !isLoading && movies.length === 0 && <p>Found no Movies.</p>}\n        {!isLoading && error && <p>{error}</p>} */}\n        {content}\n      </section>\n      \n  </Fragment>\n    \n  )}\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,QAAQ,QAAO,OAAO;AAC5D,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AACrE,OAAOC,SAAS,MAAM,+BAA+B;AAAA;AAErD,MAAMC,MAAM,GAAGH,mBAAmB,CAAC,CAEjC;EAACI,IAAI,EAAC,QAAQ;EAACC,OAAO,eAAC,QAAC,KAAK;IAAA;IAAA;IAAA;EAAA;AAAE,CAAC,EAChC;EAACD,IAAI,EAAC,GAAG;EAACC,OAAO,eAAC,QAAC,IAAI;IAAA;IAAA;IAAA;EAAA;AAAE;AACzB;AAAA,CAED,CAAC;;AAEF,MAAOC,GAAG,GAAIC,KAAK,IAAK;EAAA;EACtB,MAAM,CAACC,MAAM,EAACC,SAAS,CAAE,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgB,SAAS,EAAGC,YAAY,CAAE,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACkB,KAAK,EAACC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAM,CAACoB,KAAK,EAACC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAMsB,MAAM,GAAG,MAAK;IAClBD,QAAQ,CAAC,KAAK,CAAC;EACjB,CAAC;EACH;EACA;EACA;EACA;EACA;;EAEA;EACE,MAAME,OAAO,GAAE,MAAI;IACjBC,UAAU,CAAChB,SAAS,EAAE,EAAE,GAAG,CAAC;EAC9B,CAAC;EACD,MAAMiB,YAAY,GAAG,MAAM;IAE3BA,YAAY,CAACF,OAAO,CAAC;EACrB,CAAC;EACD,eAAeG,UAAU,GAAI;IACzBT,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAG;MACC,MAAMQ,QAAQ,GAAE,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC1D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACjB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;MAClD;;MAGF;MACA;MACA;MACA;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAClC,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAE;QACrD,OAAQ;UACNC,EAAE,EAACD,SAAS,CAACE,UAAU;UACvBC,KAAK,EAACH,SAAS,CAACG,KAAK;UACrBC,WAAW,EAACJ,SAAS,CAACK,YAAY;UAClCC,WAAW,EAACN,SAAS,CAACO;QACxB,CAAC;MAEH,CAAC,CAAE;MAEL5B,SAAS,CAACkB,iBAAiB,CAAC;IAG9B,CAAC,CAAC,OAAMf,KAAK,EAAE;MACTC,QAAQ,CAACD,KAAK,CAAC0B,OAAO,CAAC;MACvBrB,OAAO,EAAE;IAEf;IACAN,YAAY,CAAC,KAAK,CAAC;EACvB;EAIA,IAAI4B,OAAO,gBAAG;IAAA,UAAG;EAAe;IAAA;IAAA;IAAA;EAAA,QAAI;EACpC,IAAG/B,MAAM,CAACgC,MAAM,GAAG,CAAC,EAAE;IACpBD,OAAO,gBAAG,QAAC,SAAS;MAAC,MAAM,EAAE/B;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE;EACxC;EACA,IAAII,KAAK,EAAC;IACR2B,OAAO,gBAAG;MAAA,UAAI3B;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAC1B;EACA,IAAGF,SAAS,EAAE;IACZ6B,OAAO,gBAAG;MAAA,UAAG;IAAU;MAAA;MAAA;MAAA;IAAA,QAAI;EAC7B;EACA,oBACA,QAAC,QAAQ;IAAA,wBACL,QAAC,cAAc;MAAC,MAAM,EAAEpC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACjC;MAAA,wBACI,QAAC,MAAM;QAAC,OAAO,EAAC,SAAS;QAAC,OAAO,EAAEiB,UAAW;QAAA,UAAC;MAE/C;QAAA;QAAA;QAAA;MAAA,QAAS,eACT,QAAC,MAAM;QAAC,OAAO,EAAC,QAAQ;QAAC,OAAO,EAAED,YAAa;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAE1D,eACV;MAAA,UAKGoB;IAAO;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QAEH;AAEV,CAAC;AAAA,GA3FGjC,GAAG;AAAA,KAAHA,GAAG;AA8FV,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}