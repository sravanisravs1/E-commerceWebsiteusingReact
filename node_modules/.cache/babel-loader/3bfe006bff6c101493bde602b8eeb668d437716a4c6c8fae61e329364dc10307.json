{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Ecommerce\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, Fragment } from \"react\";\nimport About from './pages/About';\nimport Home from \"./pages/Home\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport MovieList from './components/Movies/MovieList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/about',\n  element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 26\n  }, this)\n}, {\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 21\n  }, this)\n}, {\n  path: '/store',\n  element: /*#__PURE__*/_jsxDEV(Store, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 26\n  }, this)\n}]);\nconst App = props => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loding, setLoading] = useState(false);\n  //   function MoviesList () {\n  //     fetch('https://swapi.dev/api/films/')\n  //     .then((response)=>{ return response.json();\n  // })\n  //     .then(data=>console.log(data.results))\n\n  // }\n  async function MoviesList() {\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const transformedMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        releaseDate: movieData.release_date,\n        openingText: movieData.opening_crawl\n      };\n    });\n    setMovies(transformedMovies);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: MoviesList,\n        children: \"FetchMovies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"RlWFqHUrCgfwR2IWNXTEDf5Qp5g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useContext","Fragment","About","Home","createBrowserRouter","RouterProvider","MovieList","router","path","element","App","props","movies","setMovies","loding","setLoading","MoviesList","response","fetch","data","json","transformedMovies","results","map","movieData","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl"],"sources":["C:/Users/Admin/Desktop/Ecommerce/src/App.js"],"sourcesContent":["import React, { useState ,useContext, Fragment} from \"react\";\nimport About from './pages/About';\nimport Home from \"./pages/Home\";\nimport { createBrowserRouter ,RouterProvider} from \"react-router-dom\";\nimport MovieList from './components/Movies/MovieList'\n\nconst router = createBrowserRouter([\n  \n  {path:'/about',element:<About/>},\n  {path:'/',element:<Home/>},\n  {path:'/store',element:<Store/>}\n  \n]);\n\nconst  App = (props) => {\n  const [movies,setMovies ] = useState([]);\n  const [loding , setLoading ] = useState(false);\n//   function MoviesList () {\n//     fetch('https://swapi.dev/api/films/')\n//     .then((response)=>{ return response.json();\n// })\n//     .then(data=>console.log(data.results))\n    \n// }\n  async function MoviesList () {\n      const response= await fetch('https://swapi.dev/api/films/');\n      const data = await response.json();\n      const transformedMovies = data.results.map((movieData=>{\n        return ({\n          id:movieData.episode_id,\n          title:movieData.title,\n          releaseDate:movieData.release_date,\n          openingText:movieData.opening_crawl\n        });\n\n      }));\n      \n    setMovies(transformedMovies)  \n  }\n  return(\n  <Fragment>\n      <RouterProvider router={router}/>\n      <section>\n          <button onClick={MoviesList}>\n            FetchMovies\n          </button>\n      </section>\n      <MovieList movies={movies}/>\n  </Fragment>\n    \n  )}\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,QAAQ,QAAO,OAAO;AAC5D,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AACrE,OAAOC,SAAS,MAAM,+BAA+B;AAAA;AAErD,MAAMC,MAAM,GAAGH,mBAAmB,CAAC,CAEjC;EAACI,IAAI,EAAC,QAAQ;EAACC,OAAO,eAAC,QAAC,KAAK;IAAA;IAAA;IAAA;EAAA;AAAE,CAAC,EAChC;EAACD,IAAI,EAAC,GAAG;EAACC,OAAO,eAAC,QAAC,IAAI;IAAA;IAAA;IAAA;EAAA;AAAE,CAAC,EAC1B;EAACD,IAAI,EAAC,QAAQ;EAACC,OAAO,eAAC,QAAC,KAAK;IAAA;IAAA;IAAA;EAAA;AAAE,CAAC,CAEjC,CAAC;AAEF,MAAOC,GAAG,GAAIC,KAAK,IAAK;EAAA;EACtB,MAAM,CAACC,MAAM,EAACC,SAAS,CAAE,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,MAAM,EAAGC,UAAU,CAAE,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAChD;EACA;EACA;EACA;EACA;;EAEA;EACE,eAAeiB,UAAU,GAAI;IACzB,MAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClC,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAE;MACrD,OAAQ;QACNC,EAAE,EAACD,SAAS,CAACE,UAAU;QACvBC,KAAK,EAACH,SAAS,CAACG,KAAK;QACrBC,WAAW,EAACJ,SAAS,CAACK,YAAY;QAClCC,WAAW,EAACN,SAAS,CAACO;MACxB,CAAC;IAEH,CAAC,CAAE;IAELlB,SAAS,CAACQ,iBAAiB,CAAC;EAC9B;EACA,oBACA,QAAC,QAAQ;IAAA,wBACL,QAAC,cAAc;MAAC,MAAM,EAAEd;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACjC;MAAA,uBACI;QAAQ,OAAO,EAAES,UAAW;QAAA,UAAC;MAE7B;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACH,eACV,QAAC,SAAS;MAAC,MAAM,EAAEJ;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACrB;AAEV,CAAC;AAAA,GApCGF,GAAG;AAAA,KAAHA,GAAG;AAuCV,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}