{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Ecommerce\\\\src\\\\App.js\";\nimport React, { useState, useContext, Fragment } from \"react\";\nimport About from './pages/About';\nimport Home from \"./pages/Home\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport MovieList from './components/Movies/MovieList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/about',\n  element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 26\n  }, this)\n}, {\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 21\n  }, this)\n}]);\nconst App = props => {\n  //   function MoviesList () {\n  //     fetch('https://swapi.dev/api/films/')\n  //     .then((response)=>{ return response.json();\n  // })\n  //     .then(data=>console.log(data.results))\n\n  // }\n  async function MoviesList() {\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const results = data.results;\n    return console.log(results);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: MoviesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useContext","Fragment","About","Home","createBrowserRouter","RouterProvider","MovieList","router","path","element","App","props","MoviesList","response","fetch","data","json","results","console","log"],"sources":["C:/Users/Admin/Desktop/Ecommerce/src/App.js"],"sourcesContent":["import React, { useState ,useContext, Fragment} from \"react\";\nimport About from './pages/About';\nimport Home from \"./pages/Home\";\nimport { createBrowserRouter ,RouterProvider} from \"react-router-dom\";\nimport MovieList from './components/Movies/MovieList'\n\nconst router = createBrowserRouter([\n  \n  {path:'/about',element:<About/>},\n  {path:'/',element:<Home/>}\n  \n]);\n\nconst  App = (props) => {\n//   function MoviesList () {\n//     fetch('https://swapi.dev/api/films/')\n//     .then((response)=>{ return response.json();\n// })\n//     .then(data=>console.log(data.results))\n    \n// }\n  async function MoviesList () {\n      const response= await fetch('https://swapi.dev/api/films/');\n      const data = await response.json();\n      const results= data.results\n      return (console.log(results))\n      \n  }\n  return(\n  <Fragment>\n      <RouterProvider router={router}/>\n      <MovieList movies={MoviesList}/>\n  </Fragment>\n    \n  )}\n\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,QAAQ,QAAO,OAAO;AAC5D,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AACrE,OAAOC,SAAS,MAAM,+BAA+B;AAAA;AAErD,MAAMC,MAAM,GAAGH,mBAAmB,CAAC,CAEjC;EAACI,IAAI,EAAC,QAAQ;EAACC,OAAO,eAAC,QAAC,KAAK;IAAA;IAAA;IAAA;EAAA;AAAE,CAAC,EAChC;EAACD,IAAI,EAAC,GAAG;EAACC,OAAO,eAAC,QAAC,IAAI;IAAA;IAAA;IAAA;EAAA;AAAE,CAAC,CAE3B,CAAC;AAEF,MAAOC,GAAG,GAAIC,KAAK,IAAK;EACxB;EACA;EACA;EACA;EACA;;EAEA;EACE,eAAeC,UAAU,GAAI;IACzB,MAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClC,MAAMC,OAAO,GAAEF,IAAI,CAACE,OAAO;IAC3B,OAAQC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EAEhC;EACA,oBACA,QAAC,QAAQ;IAAA,wBACL,QAAC,cAAc;MAAC,MAAM,EAAEV;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACjC,QAAC,SAAS;MAAC,MAAM,EAAEK;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACzB;AAEV,CAAC;AAAA,KArBGF,GAAG;AAwBV,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}